# Crude Nozzle Alignment 
#
# Set your nudge pin here
[gcode_button cna_sensor_pin]
pin: !PA4 #Filament pin for now
press_gcode:
release_gcode:

###########################################################################
# These options usually are fine as they are
[gcode_macro _cna_variables]
variable_cna_resolution: 0.01      # 1/20th of the default layer height
variable_cna_travel_speed: 10
################################################################################

#############################################################################
# These variables are used by the aligner
variable_cna_last_value: -128
variable_cna_value_z: -128
variable_cna_value_x: -128
variable_cna_value_y: -128
variable_cna_cal_z: -128
variable_cna_cal_x: -128
variable_cna_cal_y: -128
variable_cna_probe_centerx: 0
variable_cna_probe_centery: 0
variable_cna_probe_centerz: 0
gcode:
############################################################################

#################################################################################
# Start of alignment with hardcorded values and steps. Find Probe offsets first and then find tool offsets
[gcode_macro CNA_FIND_PROBE_OFFSETS]
gcode:
  G91
  {% for moves in range(1000) %}
    TRIGGER_CNA
    M400
  {% endfor %}
  M400
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_probe_centerx VALUE={printer.toolhead.position.x}
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_probe_centery VALUE={printer.toolhead.position.y}
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_probe_centerz VALUE={printer.toolhead.position.z + 5.6}
  { action_respond_info("Button Triggered") }
  { action_respond_info("CNA Probe Position is: ") }
  { action_respond_info("Probe: X: %.2f" % (printer.toolhead.position.x)) }
  { action_respond_info("Probe: Y: %.2f" % (printer.toolhead.position.y)) }
  { action_respond_info("Probe: Z: %.2f" % (printer.toolhead.position.z + 5.6)) }
  { action_respond_info("CNA Probe: ------------") }
  G90


[gcode_macro CNA_FIND_TOOL_OFFSETS]
gcode:
  {% set probex = printer["gcode_macro _cna_variables"].cna_probe_centerx|float %}
  {% set probey = printer["gcode_macro _cna_variables"].cna_probe_centery|float %}
  {% set probez = printer["gcode_macro _cna_variables"].cna_probe_centerz|float %}
  G91
  {% for moves in range(1000) %}
    TRIGGER_CNA
    M400
  {% endfor %}
  M400
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_x VALUE={printer.toolhead.position.x}
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_y VALUE={printer.toolhead.position.y}
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_z VALUE={printer.toolhead.position.z}
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_cal_x VALUE={probex - printer.toolhead.position.x}
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_cal_y VALUE={probey - printer.toolhead.position.y}
  SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_cal_z VALUE={probez - printer.toolhead.position.z}
  { action_respond_info("CNA Tool Position is: ") }
  { action_respond_info("Tool: X: %.2f" % (printer.toolhead.position.x)) }
  { action_respond_info("Tool: Y: %.2f" % (printer.toolhead.position.y)) }
  { action_respond_info("Tool: Z: %.2f" % (printer.toolhead.position.z)) }
  { action_respond_info("Tool: Xoffset: %.2f" % (probex - printer.toolhead.position.x)) }
  { action_respond_info("Tool: Yoffset: %.2f" % (probey - printer.toolhead.position.y)) }
  { action_respond_info("Tool: Zoffset: %.2f" % (probez - printer.toolhead.position.z)) }
  { action_respond_info("CNA Tool: ------------") }
  G90

[gcode_macro TRIGGER_CNA]
gcode:
  {% set cna_speed = printer["gcode_macro _cna_variables"].cna_travel_speed * 60 %}
  {% set cna_state = printer['gcode_button cna_sensor_pin'].state %}
  {% if cna_state == "RELEASED" %}
    {% set cna_resolution = printer["gcode_macro _cna_variables"].cna_resolution %}
    {% set move_direction = "Z-%f" % (cna_resolution) %}
    G0 {move_direction} F{cna_speed}
    M400
  {% endif %}
  

